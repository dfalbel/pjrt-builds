on:
  workflow_dispatch:
    inputs:
      tag_name:
        type: string
        description: 'Specify the release tag (e.g., v1.0.0)'
        required: false
        default: v1.12.1

name: Build StableHLO

permissions:
  contents: write

jobs:
  build:
    
    strategy:
      fail-fast: false
      matrix:
        
        config: 
          - {os: mac}
          - {os: linux}
          - {os: windows}

        include:
          - config: {os: mac}
            runner: macos-latest
            shell: bash
          - config: {os: linux}
            runner: ubuntu-latest
            setup: |
              sudo apt update
              sudo apt install -y lld

              # cleanup unused directories to free up space for the compilation
              sudo rm -rf /usr/local/lib/android
              sudo rm -rf /opt/ghc
              sudo rm -rf /usr/share/dotnet
              sudo rm -rf /opt/hostedtoolcache
              sudo rm -rf /usr/local/share/boost
              sudo rm -rf /usr/local/.ghcup
            shell: bash
          - config: {os: windows}
            runner: windows-latest
            shell: bash
            setup: |
              choco install llvm -y
              # Use clang to compile, otherwise it defaults to MinGW which is failing.
              echo "CC=clang" >> $GITHUB_ENV
              echo "CXX=clang++" >> $GITHUB_ENV
    
    runs-on: ${{ matrix.runner }}
    name: StableHLO (${{ matrix.config.os }})

    defaults:
      run:
        shell: ${{ matrix.shell }}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      LLVM_ENABLE_LLD: 'OFF'
      VERSION: ${{ github.event.inputs.tag_name }} 

    steps:
      - uses: actions/checkout@v4

      - run: ${{ matrix.setup }}

      - run: |
          git clone --depth=1 --single-branch --branch ${{ github.event.inputs.tag_name }} https://github.com/openxla/stablehlo

      - run: |
          cd stablehlo
          git clone --single-branch https://github.com/llvm/llvm-project.git
          cd llvm-project
          hash="$(cat ../build_tools/llvm_version.txt)"
          git checkout $hash

      - run: |
          cd stablehlo
          MLIR_ENABLE_BINDINGS_PYTHON=OFF build_tools/build_mlir.sh "${PWD}"/llvm-project/ "${PWD}"/llvm-build

      - run: |
          cd stablehlo
          mkdir -p build && cd build

          cmake .. -GNinja \
            -DLLVM_ENABLE_LLD="$LLVM_ENABLE_LLD" \
            -DCMAKE_BUILD_TYPE='Release' \
            -DLLVM_ENABLE_ASSERTIONS='ON' \
            -DSTABLEHLO_ENABLE_BINDINGS_PYTHON='OFF' \
            -DMLIR_DIR="${PWD}"/../llvm-build/lib/cmake/mlir

          cmake --build .

      - name: Rename binary with OS info
        shell: bash
        run: |
          OS=$(echo "${{ matrix.config.os }}" | cut -d'-' -f1)
          ARCH=$(uname -m)
          if [[ "$OS" == "windows" ]]; then
            FILENAME="stablehlo-opt-${VERSION}-${OS}-${ARCH}.zip"
            7z a "$FILENAME" stablehlo/build/bin/stablehlo-opt.exe
          else
            FILENAME="stablehlo-opt-${VERSION}-${OS}-${ARCH}.tar.gz"
            tar -czvf "$FILENAME" stablehlo/build/bin/stablehlo-opt
          fi
          echo "FILENAME=$FILENAME" >> $GITHUB_ENV

      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.FILENAME }}
          name: StableHLO
          tag_name: stablehlo
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}