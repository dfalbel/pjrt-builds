on:
  push:
    branches: [main, master]
  pull_request:

name: Build PJRT

permissions: read-all

jobs:
  build:
    runs-on: windows-latest
    name: Build PJRT
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - run: |
          git clone https://github.com/openxla/xla
          cd xla
          git checkout 6319f0d

      - run: |
          choco install llvm
          which clang
          clang --version

      - run: |
          cat <<EOF > xla_configure.bazelrc
          build --action_env CLANG_COMPILER_PATH=C:/Program Files/LLVM/bin/clang.exe
          build --repo_env CC=C:/Program Files/LLVM/bin/clang.exe
          build --repo_env BAZEL_COMPILER=C:/Program Files/LLVM/bin/clang.exe
          build --linkopt --ld-path=C:/Program Files/LLVM/bin/ld.lld.EXE
          build --action_env PYTHON_BIN_PATH=C:/hostedtoolcache/windows/Python/3.9.13/x64/python.exe
          build --python_path C:/hostedtoolcache/windows/Python/3.9.13/x64/python.exe
          test --test_env LD_LIBRARY_PATH
          test --test_size_filters small,medium
          build --copt -Wno-sign-compare
          build --copt -Wno-error=unused-command-line-argument
          build --copt -Wno-c23-extensions
          build --build_tag_filters -no_oss,-gpu
          build --test_tag_filters -no_oss,-gpu
          test --build_tag_filters -no_oss,-gpu
          test --test_tag_filters -no_oss,-gpu
          EOF
        shell: bash
        working-directory: ./xla

      - run: |
          cd xla
          #python configure.py --backend=cpu --os=windows --host_compiler=clang --clang_path="C://PROGRA~1//LLVM//bin//clang.exe" 
          ls 
          cat xla_configure.bazelrc

      - run: |
          cd xla
          bazel build //xla/pjrt/c:pjrt_c_api_cpu_plugin.so
